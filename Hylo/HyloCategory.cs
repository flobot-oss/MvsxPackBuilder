using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace MvsxPackBuilder
{
    public class HyloCategoryParser
    {
        private static string ExtractParameter(string str, char openBracket, char closingBracket)
        {
            // this is super inefficient, but whatever
            int startIndex = str.IndexOf(openBracket);
            int endIndex = str.IndexOf(closingBracket);

            if (startIndex != -1 && endIndex != -1)
            {
                string tmp = str.Substring(startIndex + 1, endIndex - (startIndex + 1));
                return tmp;
            }

            return "";
        }

        public static List<Hylo.Category> Deserialize(string FilePath)
        {
            List<Hylo.Category> categories = new List<Hylo.Category>();

            if (!File.Exists(FilePath))
                return categories;

            using (StreamReader reader = File.OpenText(FilePath))
            {
                while (reader.Peek() >= 0)
                {
                    string lineOfText = reader.ReadLine();

                    if (lineOfText.Length == 0)
                        continue;

                    if (lineOfText.StartsWith('#')) // this is a comment, skip
                        continue;

                    // look for an open bracket
                    if (lineOfText.StartsWith('['))
                    {
                        string[] tokens = lineOfText.Split('=', StringSplitOptions.RemoveEmptyEntries);

                        if (tokens.Length != 2)
                            continue;

                        Hylo.Category category = new Hylo.Category();
                        category.FolderName = ExtractParameter(tokens[0], '[', ']');
                        category.DisplayName = ExtractParameter(tokens[1], '<', '>');

                        categories.Add(category);
                    }

                }
            }

            return categories;
        }

        public static void Serialize(string FilePath, List<Hylo.Category> Categories)
        {
            string directoryName = Path.GetDirectoryName(FilePath);
            if (!Directory.Exists(directoryName))
            {
                Directory.CreateDirectory(directoryName);
            }

            using (StreamWriter writer = new StreamWriter(FilePath))
            {
                writer.WriteLine("# auto generated by MvsxPackBuilder, do not edit!");
                writer.WriteLine("");
                foreach (Hylo.Category category in Categories)
                {
                    writer.WriteLine(@"[{0:s}]=<{1:s}>", category.FolderName, category.DisplayName);
                }
            }
        }

    }

}
